########################################################  
###devtools相关设置
######################################################## 
# 重新加载时取消日志记录
spring.devtools.restart.log-condition-evaluation-delta=false
# 忽略指定目录内容修改导致系统重启,默认情况下
# /META-INF/maven, /META-INF/resources, /resources, /static, /public, /templates
# 内容修改不会导致系统重新加载AdminClientConfig
#spring.devtools.restart.exclude=static/**,public/**
# 配置classpath之外的目录内容修改，系统需要重新加载
#spring.devtools.restart.additional-paths=outclasspath

# 禁用重新加载设置为false
spring.devtools.restart.enabled=true
# 只有trigger file修改才会导致重新加载,修改其他文件不会引起重新加载,该配置文件对应的默认路径是classpath
#spring.devtools.restart.trigger-file=restart-trigger.txt
# 开启当spring boot重新加载后浏览器自动更新,这里需要浏览器安装livereload插件
spring.devtools.livereload.enabled=true
# 开启远程客户端，连接到远程的spring boot服务，主要是为了通过远程服务客户端将本地修改推到远程服务做更新
# 1. 远程spring boot服务需要设置spring-boot-maven-plugin启用devtools
# <configuration>
#   <excludeDevtools>false</excludeDevtools>
# </configuration>
# 2. 需要设置远程服务连接认证密码spring.devtools.remote.secret
# 客户端在连接到远程服务时会采用当前配置的密码进行认证
spring.devtools.remote.secret=123456


########################################################  
### banner
######################################################## 
##### 定制文本banner
# 1. 直接在classpath添加banner.txt
# 2. 通过spring.banner.location指定banner路径
#spring.banner.location=classpath:banners/banner.txt
#spring.banner.location=file:C:\\Users\\Administrator\\Desktop\\banner.txt
# 通过/和classpath:前缀是等效的，都是从classpath目录中查找
#spring.banner.location=/banners/banner-with-color.txt
#spring.banner.charset=UTF-8

##### 定制图片banner
# 图片最后会转化成ASCII的形式展现
# 1. 直接在classpath下添加banner.[gif,jpg,png]三种图片之一
# 2. 通过spring.banner.image.location设置路径
#spring.banner.image.location=file:C:\\Users\\Administrator\\Desktop\\20180227141621.jpg

########################################################  
### 日志
######################################################## 
# 指定日志文件名称(当前目录),或者全路径
#logging.file=C:\\Users\\Administrator\\Desktop\\springboot.log
# 指定日志文件生成目录，名称为spring.log,logging.file和logging.path不能同时作用
#logging.path=C:\\Users\\Administrator\\Desktop

# 设置日志打印级别
# logging.level.org.springframework.web=DEBUG

# 修改日志文件大小和归档文件大小
# 默认日志文件大小10MB
#logging.file.max-size=10MB
# 设置归档保存的日志文件大小
#logging.file.max-history=50MB

# 可以添加日志文件做一些定制修改
# Logback logback-spring.xml, logback.xml
# Log4j2  log4j2-spring.xml, log4j2.xml
# JDK (Java Util Logging)  logging.properties
# 官方文档推荐使用-spring形式的日志文件，并且Java Util Logging在可执行jar运行时还存在一些问题，不建议在可执行jar包中使用logging.properties

########################################################  
### 自定义favicon
########################################################
spring.mvc.favicon.enabled=false


########################################################  
###Servlet Container
########################################################  
# 服务器端口，默认8080
server.port=8080
# 监听地址
server.address=0.0.0.0
# session是否持久化
server.servlet.session.persistence=true
#server.servlet.session.store-dir=/session-dir
# session超时时间，单位秒
server.servlet.session.timeout=120