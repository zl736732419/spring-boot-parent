########################################################  
###redis
########################################################
hostname=zl202
######### 单机配置 
spring.redis.standalone.hostname = ${hostname}
# 连接redis的密码
spring.redis.standalone.password =
# 连接redis的端口号
spring.redis.standalone.port = 6379
# 当前采用的redis数据库
spring.redis.standalone.database = 0

######### 集群配置
# （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。
spring.redis.cluster.max-redirects=3
# （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。
spring.redis.cluster.nodes=${hostname}:7000,${hostname}:7001,${hostname}:7002,${hostname}:7003,${hostname}:7004,${hostname}:7005
spring.redis.cluster.password=
# 集群连接超时时间(单位毫秒)
spring.redis.cluster.timeout=120000

#redis连接池配置
# 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。
spring.redis.pool.maxWait=-1
# 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。
spring.redis.pool.minIdle=0
# 最大空闲连接数, 默认8个
spring.redis.pool.maxIdle = 20
# 最大连接数, 默认8个
spring.redis.pool.maxTotal = 500
# 每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3
spring.redis.pool.numTestsPerEvictionRun = 3
# 在获取连接的时候检查有效性, 默认false
spring.redis.pool.testOnBorrow = true
# 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
spring.redis.pool.blockWhenExhausted = false
# 在回收连接的时候检查有效性, 默认false
spring.redis.pool.testOnReturn = false


########################################################  
###redis http session
########################################################
spring.session.store-type=redis
server.servlet.session.timeout=1800s
# on-save
#   当http响应完成并返回给前端时才会同步到redis
# immediate
#   对session的修改马上同步到redis
spring.session.redis.flush-mode=on-save
spring.session.redis.namespace=spring:session


